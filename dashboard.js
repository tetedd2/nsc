// ================== Firebase Configuration ==================
const firebaseConfig = {
    apiKey: "AIzaSyBjLBl1sEGgQLyng51rW25b434bJ0opVc4",
    authDomain: "myapplication-bd04c034.firebaseapp.com",
    databaseURL: "https://myapplication-bd04c034-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "myapplication-bd04c034",
    storageBucket: "myapplication-bd04c034.firebasestorage.app",
    messagingSenderId: "49782830313",
    appId: "1:49782830313:web:c81b5d86a937f22d296c78"
};

// ==== Import Firebase SDK v9 ====
import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js';
import { getAuth, onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js';
import {
    getFirestore, collection, doc, setDoc, getDoc, updateDoc, onSnapshot,
    query, orderBy, addDoc, deleteDoc, serverTimestamp, arrayUnion, increment
} from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js';
import { getStorage } from 'https://www.gstatic.com/firebasejs/9.6.1/firebase-storage.js';

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);
const storage = getStorage(app);

let transactions = [];
let goals = [];
let currentGoalIndex = 0;
let unsubscribeListeners = [];

// ================== Authentication Observer ==================
onAuthStateChanged(auth, (user) => {
    if (user) {
        attachRealtimeListeners(user.uid);
        giveDailyLoginReward(user.uid); // ‡πÅ‡∏à‡∏Å‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô (‡πÅ‡∏Ñ‡πà‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
        // ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞ sync ‡∏ú‡πà‡∏≤‡∏ô onSnapshot ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
        onSnapshot(doc(db, 'users', user.uid), snap => {
            const data = snap.data() || {};
            renderShop(data);
        });
    } else {
        detachRealtimeListeners();
        updateProfileUI({}, null);
        updateFinancialSummary();
        document.getElementById('transactionsContainer').innerHTML = '<p class="no-transactions-message">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°</p>';
        document.getElementById('goalTitle').textContent = "- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö -";
        document.getElementById('goalAmount').textContent = "‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: 0.00 ‡∏ø";
        document.getElementById('goalSavings').textContent = "‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: 0.00 ‡∏ø";
        document.getElementById('goalProgressBar').style.width = '0%';
        document.getElementById('goalProgressBar').textContent = '0%';
        document.getElementById('goalDueDate').textContent = "‡∏Å‡∏≥‡∏´‡∏ô‡∏î: -";
        document.getElementById('prevGoal').style.display = 'none';
        document.getElementById('nextGoal').style.display = 'none';
    }
});

// ================== Real-time Data Listeners ==================
function attachRealtimeListeners(uid) {
    detachRealtimeListeners();

    // Profile listener
    const userProfileListener = onSnapshot(doc(db, 'users', uid), (docSnapshot) => {
        if (docSnapshot.exists()) {
            updateProfileUI(docSnapshot.data(), auth.currentUser);
        } else {
            setDoc(doc(db, 'users', uid), {
                displayName: auth.currentUser.displayName || "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà",
                level: "Level 1 ‚Äì ‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô",
                xp: 0,
                nextLevelXP: 100,
                quote: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà!",
                badges: []
            });
        }
    }, console.error);

    // Transactions
    const transactionsQuery = query(collection(db, 'users', uid, 'transactions'), orderBy('date', 'desc'));
    const transactionsListener = onSnapshot(transactionsQuery, (snapshot) => {
        transactions = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        displayTransactions();
        updateFinancialSummary();
    }, console.error);

    // Goals
    const goalsQuery = query(collection(db, 'users', uid, 'goals'), orderBy('createdAt', 'desc'));
    const goalsListener = onSnapshot(goalsQuery, (snapshot) => {
        goals = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        currentGoalIndex = 0;
        displayGoals();
    }, console.error);

    unsubscribeListeners = [userProfileListener, transactionsListener, goalsListener];
}

function detachRealtimeListeners() {
    unsubscribeListeners.forEach(unsubscribe => unsubscribe());
    unsubscribeListeners = [];
}

// ============ ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ & Daily Login Reward =============

// ================== ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ==================
const shopItems = [
    { id: 'bank', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ô‡∏±‡∏Å‡∏≠‡∏≠‡∏°', price: 100, icon: 'üè¶' },
    { id: 'invest', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ô‡∏±‡∏Å‡∏•‡∏á‡∏ó‡∏∏‡∏ô', price: 120, icon: 'üíπ' },
    { id: 'planner', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô', price: 110, icon: 'üìù' },
    { id: 'debt', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏õ‡∏•‡∏≠‡∏î‡∏´‡∏ô‡∏µ‡πâ', price: 90, icon: 'üí∏' },
    { id: 'income', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á', price: 80, icon: 'üåê' },
    { id: 'entrepreneur', name: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£', price: 150, icon: 'üí°' }
];

// ================== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ==================
function renderShop(user) {
    if (!document.getElementById('shopItemsRow')) return;
    document.getElementById('userCoins').textContent = user.coins || 0;
    const inventory = user.inventory || [];
    const row = document.getElementById('shopItemsRow');
    row.innerHTML = '';

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ (‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    if (inventory.length === 0) {
        row.innerHTML = '<div style="text-align:center;width:100%;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç</div>';
        return;
    }

    shopItems.forEach(item => {
        if (!inventory.includes(item.id)) return; // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠
        const el = document.createElement('div');
        el.className = 'shop-item unlocked';
        el.innerHTML = `
            <div class="item-icon">${item.icon}</div>
            <div class="item-name">${item.name}</div>
            <div class="item-price">${item.price} ü™ô</div>
            <button disabled>‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß</button>
        `;
        row.appendChild(el);
    });
}

// ================== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á ==================
async function buyItem(uid, itemId, price) {
    const userRef = doc(db, 'users', uid);
    const userSnap = await getDoc(userRef);
    if (!userSnap.exists()) return alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
    const user = userSnap.data();
    if ((user.coins || 0) < price) return alert('‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÑ‡∏°‡πà‡∏û‡∏≠');
    await updateDoc(userRef, {
        coins: (user.coins || 0) - price,
        inventory: arrayUnion(itemId)
    });
    alert('‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
}

// ---- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡∏Å‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á ----
async function giveDailyLoginReward(uid) {
    const userRef = doc(db, 'users', uid);
    const userSnap = await getDoc(userRef);
    if (!userSnap.exists()) return;
    const user = userSnap.data();
    const todayStr = (new Date()).toISOString().slice(0, 10);
    if (user.lastLoginReward !== todayStr) {
        await updateDoc(userRef, {
            coins: increment(25),
            lastLoginReward: todayStr
        });
        alert('‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô +25 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç!');
    }
}

// ================== UI Update & ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏° ==================
// ... (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° ‡πÄ‡∏ä‡πà‡∏ô updateProfileUI, updateFinancialSummary, displayTransactions, displayGoals, modal, chatbot ‡∏Ø‡∏•‡∏Ø)
// (‡πÑ‡∏°‡πà‡∏°‡∏µ import Firestore ‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏µ‡∏Å)


// -----------------------
// ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤+‡πÅ‡∏à‡∏Å‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
auth.onAuthStateChanged(user => {
  if (!user) return;
  // ‡πÅ‡∏à‡∏Å‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  giveDailyLoginReward(user.uid);
  // ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
  onSnapshot(doc(db, 'users', user.uid), snap => {
    const data = snap.data() || {};
    renderShop(data);
  });
});

function updateProfileUI(userData, user) {
    // Profile Picture
    document.getElementById('profilePicture').src = user ? user.photoURL || 'https://cdn-icons-png.flaticon.com/512/4712/4712035.png' : 'https://cdn-icons-png.flaticon.com/512/4712/4712035.png';
    // Username, Level, and Quote
    document.getElementById('usernameDisplay').textContent = userData.displayName || (user ? user.displayName : '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà');
    document.getElementById('userLevel').textContent = userData.level || "Level 1 ‚Äì ‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô";
    document.getElementById('userQuote').textContent = `"${userData.quote || '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà!'}"`;
    // XP Progress Bar
    const currentXP = userData.xp || 0;
    const nextLevelXP = userData.nextLevelXP || 100;
    const progressPercent = (currentXP / nextLevelXP) * 100;
    document.getElementById('userProgress').style.width = `${progressPercent}%`;
    document.getElementById('progressValue').textContent = `${Math.round(progressPercent)}%`;
    document.getElementById('currentXP').textContent = currentXP;
    document.getElementById('nextLevelXP').textContent = nextLevelXP;

    // Badges (Updated logic to use allBadges definition)
    const badgesContainer = document.getElementById('userBadges');
    badgesContainer.innerHTML = ''; // Clear existing badges

    const userUnlockedBadgeIds = userData.badges || []; // Assume userData.badges is an array of badge IDs

    if (allBadges.length > 0) {
        allBadges.forEach(badgeData => {
            const badgeDiv = document.createElement('div');
            badgeDiv.classList.add('badge');
            badgeDiv.dataset.badgeId = badgeData.id; // Set data-badge-id for specific styling

            const isUnlocked = userUnlockedBadgeIds.includes(badgeData.id);

            if (isUnlocked) {
                badgeDiv.classList.add('unlocked');
                badgeDiv.setAttribute('title', `${badgeData.name}: ${badgeData.description}`);
            } else {
                badgeDiv.classList.add('locked');
                badgeDiv.setAttribute('title', `‡∏•‡πá‡∏≠‡∏Ñ - ${badgeData.name}: ${badgeData.description}`);
            }
            badgeDiv.textContent = badgeData.icon;
            badgesContainer.appendChild(badgeDiv);
        });
    } else {
        badgesContainer.innerHTML = '<div class="badge placeholder" title="‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ï‡∏£‡∏≤">‚ùì</div>';
    }
}

function updateFinancialSummary() {
    let totalIncome = 0;
    let totalExpense = 0;
    transactions.forEach(tx => {
        const amount = parseFloat(tx.amount);
        if (tx.type === 'income') totalIncome += amount;
        else if (tx.type === 'expense') totalExpense += amount;
    });
    const balance = totalIncome - totalExpense;

    document.getElementById('income').textContent = `${totalIncome.toFixed(2)} ‡∏ø`;
    document.getElementById('expense').textContent = `${totalExpense.toFixed(2)} ‡∏ø`;
    document.getElementById('balance').textContent = `${balance.toFixed(2)} ‡∏ø`;
}

function displayTransactions() {
    const container = document.getElementById('transactionsContainer');
    container.innerHTML = '';
    if (transactions.length === 0) {
        container.innerHTML = '<p class="no-transactions-message">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</p>'; // Use specific class
        return;
    }
    transactions.forEach(tx => {
        const item = document.createElement('div');
        item.className = 'transaction-item';
        item.innerHTML = `
            <div class="transaction-details">
                <h3>${tx.description}</h3>
                <p>${new Date(tx.date).toLocaleDateString('th-TH')}</p>
            </div>
            <div class="transaction-amount ${tx.type}">
                ${tx.type === 'income' ? '+' : '-'} ${parseFloat(tx.amount).toFixed(2)} ‡∏ø
            </div>
            <button class="delete-btn" onclick="deleteTransaction('${tx.id}')">&times;</button>
        `;
        container.appendChild(item);
    });
}

function displayGoals() {
    const goalSection = document.getElementById('goalDisplay');
    const prevBtn = document.getElementById('prevGoal');
    const nextBtn = document.getElementById('nextGoal');
    
    if (goals.length === 0) {
        goalSection.style.display = 'block'; // Ensure section is visible even if no goals
        document.getElementById('goalTitle').textContent = "- ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ -";
        document.getElementById('goalAmount').textContent = "‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: 0.00 ‡∏ø";
        document.getElementById('goalSavings').textContent = "‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: 0.00 ‡∏ø";
        document.getElementById('goalProgressBar').style.width = '0%';
        document.getElementById('goalProgressBar').textContent = '0%';
        document.getElementById('goalDueDate').textContent = "‡∏Å‡∏≥‡∏´‡∏ô‡∏î: -";
        prevBtn.style.display = 'none';
        nextBtn.style.display = 'none';
        return;
    }

    prevBtn.style.display = goals.length > 1 ? 'block' : 'none';
    nextBtn.style.display = goals.length > 1 ? 'block' : 'none';

    // Ensure currentGoalIndex loops correctly (if needed, or just cap at min/max)
    if (currentGoalIndex < 0) currentGoalIndex = goals.length - 1;
    if (currentGoalIndex >= goals.length) currentGoalIndex = 0;

    const goal = goals[currentGoalIndex];
    const target = parseFloat(goal.targetAmount || 0);
    const saved = parseFloat(goal.savings || 0);
    const progress = target > 0 ? (saved / target) * 100 : 0;

    document.getElementById('goalTitle').textContent = goal.name;
    document.getElementById('goalAmount').textContent = `‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: ${target.toFixed(2)} ‡∏ø`;
    document.getElementById('goalSavings').textContent = `‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: ${saved.toFixed(2)} ‡∏ø`;
    document.getElementById('goalProgressBar').style.width = `${Math.min(100, progress).toFixed(0)}%`;
    document.getElementById('goalProgressBar').textContent = `${Math.min(100, progress).toFixed(0)}%`;
    document.getElementById('goalDueDate').textContent = goal.dueDate ? `‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${new Date(goal.dueDate).toLocaleDateString('th-TH')}` : "‡∏Å‡∏≥‡∏´‡∏ô‡∏î: -";
}

// ================== Data Manipulation Functions ==================

async function deleteTransaction(transactionId) {
    if (confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?") && auth.currentUser) {
        try {
            await deleteDoc(doc(db, "users", auth.currentUser.uid, "transactions", transactionId));
            alert("‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        } catch (error) {
            console.error("Error removing transaction: ", error);
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö: " + error.message);
        }
    }
}

// ================== DOM Event Listeners (DOMContentLoaded) ==================
document.addEventListener('DOMContentLoaded', () => {
    // Dark Mode Toggle - Assuming darkmode-toggle.js handles this separately
    const enableDark = localStorage.getItem("moneySkillzDarkMode") === "true";
    if (enableDark) document.body.classList.add("dark-mode");

    // Goal Form Submission (from goalModal)
    const goalForm = document.getElementById('goalForm');
    if (goalForm) {
        goalForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const user = auth.currentUser;
            if (!user) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");

            const name = document.getElementById('goalNameInput').value.trim();
            const targetAmount = parseFloat(document.getElementById('goalTargetAmount').value);
            const savings = parseFloat(document.getElementById('goalCurrentSavings').value || 0);
            const dueDate = document.getElementById('goalDueDateInput').value;
            const messageDiv = document.getElementById('goalMessage');

            if (!name || isNaN(targetAmount) || targetAmount <= 0) {
                messageDiv.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
                messageDiv.style.color = "red"; // Use actual CSS var if available, otherwise direct color
                return;
            }

            try {
                await addDoc(collection(db, "users", user.uid, "goals"), {
                    name, targetAmount, savings, dueDate,
                    createdAt: serverTimestamp() // Use Firebase v9 serverTimestamp
                });
                messageDiv.textContent = "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!";
                messageDiv.style.color = "green"; // Use actual CSS var if available, otherwise direct color
                document.getElementById('goalForm').reset();
                setTimeout(closeGoalModal, 1000);
            } catch (error) {
                messageDiv.textContent = "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message;
                messageDiv.style.color = "red"; // Use actual CSS var if available, otherwise direct color
                console.error("Error adding goal: ", error);
            }
        });
    }

    // Goal Navigation
    const prevGoalBtn = document.getElementById('prevGoal');
    const nextGoalBtn = document.getElementById('nextGoal');
    
    if (prevGoalBtn) prevGoalBtn.addEventListener('click', () => { currentGoalIndex--; displayGoals(); });
    if (nextGoalBtn) nextGoalBtn.addEventListener('click', () => { currentGoalIndex++; displayGoals(); });

    // AI Chat Form
    const aiChatForm = document.getElementById('aiChatForm');
    if (aiChatForm) {
        aiChatForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const input = document.getElementById('aiChatInput');
            const message = input.value.trim();
            if (message) {
                appendMsg('user', message);
                input.value = '';
                const aiResponse = await getAiResponse(message);
                appendMsg('ai', aiResponse);
            }
        });
    }
});

// ================== Modal Control Functions ==================
function openTransactionModal() { document.getElementById('transactionModal').style.display = 'flex'; }
function closeTransactionModal() { 
    document.getElementById('transactionModal').style.display = 'none';
    document.getElementById('transactionMessage').textContent = '';
    document.getElementById('transactionForm').reset();
}
function openGoalModal() { document.getElementById('goalModal').style.display = 'flex'; }
function closeGoalModal() {
    document.getElementById('goalModal').style.display = 'none';
    document.getElementById('goalMessage').textContent = '';
    document.getElementById('goalForm').reset();
}

// ================== AI Chatbot Logic ==================
function appendMsg(sender, msg) {
    const historyBox = document.getElementById('aiChatHistory');
    const msgDiv = document.createElement('div');
    msgDiv.className = `chat-message ${sender}`;
    msgDiv.textContent = msg;
    historyBox.appendChild(msgDiv);
    historyBox.scrollTop = historyBox.scrollHeight;
}

async function getAiResponse(message) {
    return new Promise(resolve => {
        setTimeout(() => {
            const txt = message.toLowerCase();
            let responses = [];

            // ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢ / ‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
            if (txt.match(/(‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ|hello|hi|‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ|‡∏ó‡∏±‡∏Å|‡∏î‡∏µ)/)) {
                responses = [
                    "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ AI ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏≤‡∏Å‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö üòä",
                    "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö! ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞"
                ];
            }
            // ‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô-‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏≠‡∏°
            else if (txt.match(/(‡∏≠‡∏≠‡∏°|‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏≠‡∏°|‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°|‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô)/)) {
                responses = [
                    "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏≠‡∏°‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 20 ‡∏ö‡∏≤‡∏ó ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏£‡∏±‡∏ö",
                    "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏à‡∏î‡πÉ‡∏ô‡πÅ‡∏≠‡∏û‡∏î‡∏π‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?"
                ];
            }
            // ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏°/‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå
            else if (txt.match(/(‡πÄ‡∏Å‡∏°|‡πÄ‡∏Ñ‡∏ß‡∏™|‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à|‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç|‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤|‡∏î‡πà‡∏≤‡∏ô|‡πÑ‡∏≠‡πÄ‡∏ó‡∏°|‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô|level|‡πÅ‡∏ï‡πâ‡∏°|‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô)/)) {
                responses = [
                    "‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÉ‡∏ô‡πÅ‡∏≠‡∏û‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÅ‡∏•‡∏∞‡πÅ‡∏ï‡πâ‡∏° ‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏•‡∏≠‡∏á‡∏™‡∏∞‡∏™‡∏°‡∏î‡∏π!",
                    "‡∏ú‡πà‡∏≤‡∏ô‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÑ‡∏´‡∏ô‡πÑ‡∏´‡∏°?"
                ];
            }
            // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
            else if (txt.match(/(‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢|goal|‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤|‡∏≠‡∏≠‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£|‡∏ù‡∏±‡∏ô|‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô|‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à)/)) {
                responses = [
                    "‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏¢‡∏≤‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå ‡∏≠‡∏≠‡∏Å‡∏ó‡∏£‡∏¥‡∏õ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏û‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!",
                    "‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πÜ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö"
                ];
            }
            // ‡∏•‡∏á‡∏ó‡∏∏‡∏ô/‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢/‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
            else if (txt.match(/(‡∏•‡∏á‡∏ó‡∏∏‡∏ô|‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ|‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô|‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á|‡∏´‡∏∏‡πâ‡∏ô|‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢|‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô|passive income)/)) {
                responses = [
                    "‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏ñ‡∏≤‡∏°‡∏ú‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö",
                    "‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÜ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á"
                ];
            }
            // ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì/‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
            else if (txt.match(/(‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì|‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£‡πÄ‡∏á‡∏¥‡∏ô|‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô|budget|‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô|‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢|‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö)/)) {
                responses = [
                    "‡∏™‡∏π‡∏ï‡∏£‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡∏á‡∏ö: 50% ‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô, 30% ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß, 20% ‡∏≠‡∏≠‡∏°/‡∏•‡∏á‡∏ó‡∏∏‡∏ô (50/30/20)",
                    "‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡πÅ‡∏≠‡∏û ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö"
                ];
            }
            // ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô/‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß/‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à
            else if (txt.match(/(‡πÄ‡∏£‡∏µ‡∏¢‡∏ô|‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô|‡∏™‡∏≠‡∏ö|‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô|‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ô|‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à|motivation|‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠|‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô|‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î|‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢|‡∏Ç‡∏µ‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏à)/)) {
                responses = [
                    "‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏™‡∏±‡πâ‡∏ô‡πÜ (‡πÄ‡∏ä‡πà‡∏ô 25 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏û‡∏±‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ) ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏à‡∏î‡∏à‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô (‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ Pomodoro!)",
                    "‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏∑‡πà‡∏≠ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÇ‡∏õ‡∏£‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏à‡∏∞‡∏™‡∏î‡∏ä‡∏∑‡πà‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö",
                    "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î, ‡πÄ‡∏Å‡∏£‡∏î‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô) ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô!"
                ];
            }
            // ‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á/‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ä‡∏ß‡∏ô‡∏Ñ‡∏¥‡∏î
            else if (txt.match(/(‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á|‡πÇ‡∏ï|‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï|‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á|‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà|‡∏ó‡πâ‡∏≠|‡∏û‡∏•‡∏≤‡∏î|‡∏ú‡∏¥‡∏î‡∏´‡∏ß‡∏±‡∏á|‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à|‡∏Ç‡∏µ‡πâ‡∏•‡∏∑‡∏°|‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à)/)) {
                responses = [
                    "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏Ñ‡∏¢‡∏ú‡∏¥‡∏î‡∏´‡∏ß‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏•‡∏≤‡∏î‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡∏°‡πà‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥‡πÑ‡∏î‡πâ!",
                    "‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏û‡∏≠ ‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏ô‡∏¥‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö",
                    "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡∏•‡∏∞‡∏ô‡∏¥‡∏î ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 1% ‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô!"
                ];
            }
            // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô/‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ/‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
            else if (txt.match(/(‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£|‡∏ó‡∏≥‡πÑ‡∏°|‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå|‡∏Ç‡πâ‡∏≠‡∏î‡∏µ|‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢|‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢|‡∏ô‡∏¥‡∏¢‡∏≤‡∏°|‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢|‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏´‡∏°|‡∏î‡∏µ‡πÑ‡∏´‡∏°)/)) {
                responses = [
                    "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏¢‡∏≤‡∏°‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
                    "‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏î‡∏µ (‡πÄ‡∏á‡∏¥‡∏ô‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢) ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢ (‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô) ‡∏Ñ‡∏ß‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏´‡πâ‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
                    "‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢ ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"
                ];
            }
// ‡∏ñ‡∏≤‡∏°‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°/challenge
else if (txt.match(/(‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢|challenge|‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡πÉ‡∏´‡∏°‡πà|‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢|‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°|‡∏™‡∏π‡∏ï‡∏£|trick|‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏ô‡πà‡∏≠‡∏¢|‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ)/)) {
    responses = [
        "Challenge ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ü‡∏∏‡πà‡∏°‡πÄ‡∏ü‡∏∑‡∏≠‡∏¢ 1 ‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ 30 ‡∏ö‡∏≤‡∏ó!",
        "‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ç‡πà‡∏á‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡πÅ‡∏≠‡∏û ‡πÉ‡∏Ñ‡∏£‡∏≠‡∏≠‡∏°‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏©!",
        "‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡∏≠‡∏ö ‡∏•‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ô‡πâ‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏à‡∏∞‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö"
    ];
}
// ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ/‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö/‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥
else if (txt.match(/(‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ|trick|‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥|‡∏ó‡∏≥‡∏¢‡∏±‡∏á‡πÑ‡∏á|‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥|‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö|‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£)/)) {
    responses = [
        "‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏≠‡∏° 10% ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö",
        "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ",
        "‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏á‡∏ö‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏π‡∏ï‡∏£ 50/30/20 ‡∏Ñ‡∏∑‡∏≠ 50% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô, 30% ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡πÉ‡∏à, 20% ‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô",
        "‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡∏•‡∏∞‡∏ô‡πâ‡∏≠‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô 25 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏û‡∏±‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏™‡∏•‡∏±‡∏ö‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö",
        "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏° ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô?"
    ];
}
// ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à/‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
else {
    responses = [
        "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏Å‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
        "‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß ‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏î‡∏π‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏¢‡∏≤‡∏Å‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏î‡∏µ?",
        "‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô/‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πá‡∏ö‡∏≠‡∏Å‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö!"
    ];
}

            // Randomize ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏â‡∏•‡∏≤‡∏î
            const reply = responses[Math.floor(Math.random() * responses.length)];
            resolve(reply);
        }, 500);
    });
}
